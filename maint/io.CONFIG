#!/bin/bash

declare -A locations
# declare -A set_scripts

LOG="$HOME/.io/logs/io.CONFIG.md"

# Add some Color to those messages!!
source $HOME/.io/.blanks/color
source $HOME/.io/config/.Locations
# source $HOME/.io/.blanks/keys/set_scripts

# Ensure log file exists
if [ ! -f $LOG ]
then
    mkdir ~/.io/logs
    printf "_generated at: $(date)_  \n" > $LOG
fi

printf "  \n# Begin $HOSTNAME :: $(date) \n\`\`\`  \n" >> $LOG

# Ensure everyone can write to the ramlog
[[ -s /tmp/.0 ]]&& sudo chmod 666 /tmp/.0 || (touch /tmp/.0 && chmod 666 /tmp/.0)

#for s in ${!set_scripts[@]}
#do
#  $($s)
#done
$HOME/.io/maint/set.BLANKS
$HOME/.io/maint/set.RUBY
$HOME/.io/maint/set.NANO
$HOME/.io/maint/set.AGENT

for l in ${!locations[@]}
do
	printf  "${locations[$l]} SAVED STATE >> ~/.defaults.tbz2\n" | tee -a $LOG
	tar -cjvf - ${locations[$l]} >> ~/.defaults.tbz2 --remove-files -P &>> $LOG
	printf "$l to ${locations[$l]}\n"|tee -a $LOG

  if [ $l = '.bashrc' ]
  then
#      printf '\n```  \n' >> $LOG
      cp -vrT $HOME/.io/config/$l ${locations[$l]} &>> $LOG
#      printf '\n```  \n' >> $LOG
  else
#      printf '\n```  \n' >> $LOG
      cp -v $HOME/.io/config/$l ${locations[$l]} &>> $LOG
#      printf '\n```  \n' >> $LOG
  fi
done

printf "\`\`\`  \n # End $HOSTNAME :: $(date) \n" >> $LOG

#printf "Turn on WiFi?\n"
#read WiON
#
#if [ $WiON ]
#then
#    case $WiON in
#    y)
#      wifi.ON
#    ;;
#    yes)
#      wifi.ON
#    ;;
#    n)
#      printf "NOT turning on WiFi\n"
#    ;;
#    no)
#      printf "NOT turning on WiFi\n"
#    ;;
#    *)
#      printf "Not sure what that means... gonna not WiFi\n"
#    ;;
#    esac
#fi
#
#printf "Turn on GUI?\n"
#read guiON
#
#if [ $guiON ]
#then
#    case $guiON in
#    y)
#      startxfce4
#    ;;
#    yes)
#      startxfce4
#    ;;
#    n)
#      printf "NOT turning on GUI\n"
#    ;;
#    no)
#      printf "NOT turning on GUI\n"
#    ;;
#    *)
#      printf "Not sure what that means... no GUI for you.\n"
#    ;;
#    esac
#fi

unset LOG # WiON guiON

#####
#   Next generation will have a separate keyfile { rcfile='path', etc. }
# thusly it will batch install rcfiles for expandability
