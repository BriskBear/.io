#!/bin/bash

declare -A locations
LOG="/tmp/io/log/io.CONFIG"

# Add some Color to those messages!!
source $HOME/.io/.blanks/color
source $HOME/.io/config/.Locations

# Ensure log file exists
if [ ! -f $LOG ]
then
    mkdir -p /tmp/io/log
    printf "_generated at: $(date)_  \n" > $LOG
fi

printf "  \n# Begin $HOSTNAME :: $(date) \n\`\`\`  \n" >> $LOG

# Ensure everyone can write to the ramlog
[[ -s /tmp/.0 ]]|| (touch /tmp/.0 && chmod 666 /tmp/.0)

io_set_scripts() {
  $HOME/.io/maint/set.BLANKS &
  $HOME/.io/maint/set.RUBY &
  $HOME/.io/maint/set.AGENT &
}

preserve_defaults() {
  echo "Preserving Defaults in $HOME/.config/defaults.tbz2"
  for l in ${!locations[@]}
  do
  	printf  "${locations[$l]} SAVED STATE >> ~/.config/defaults.tbz2\n" | tee -a $LOG
  	tar -cjvf - ${locations[$l]} >> ~/.config/defaults.tbz2 --remove-files -P &>> $LOG
  	printf "$l to ${locations[$l]}\n"|tee -a $LOG
  done
}

io_set_scripts
[[ -f $HOME/.config/defaults.tbz2 ]] || preserve_defaults
[[ -L $HOME/.bashrc               ]] || ln -vs $HOME/.io/config/bashrc  $HOME/.bashrc  &>> $LOG
[[ -L $HOME/.profile              ]] || ln -vs $HOME/.io/config/profile $HOME/.profile &>> $LOG
[[ -L $HOME/.inputrc              ]] || ln -vs $HOME/.io/config/inputrc $HOME/.inputrc &>> $LOG

printf "\`\`\`  \n # End $HOSTNAME :: $(date) \n" >> $LOG

unset LOG # WiON guiON

#####
#   Next generation will have a separate keyfile { rcfile='path', etc. }
# thusly it will batch install rcfiles for expandability
