#!/bin/bash

declare -A locations
LOG="$HOME/.io/logs/io.CONFIG.md"

# Add some Color to those messages!!
source $HOME/.io/.blanks/color
source $HOME/.io/config/.Locations

# Ensure log file exists
if [ ! -f $LOG ]
then
    mkdir ~/.io/logs
    printf "_generated at: $(date)_  \n" > $LOG
fi

printf "  \n# Begin $HOSTNAME :: $(date) \n\`\`\`  \n" >> $LOG

# Ensure everyone can write to the ramlog
[[ -s /tmp/.0 ]]|| (touch /tmp/.0 && chmod 666 /tmp/.0)

io_set_scripts() {
  $HOME/.io/maint/set.BLANKS &
  $HOME/.io/maint/set.RUBY &
  $HOME/.io/maint/set.NANO &
  $HOME/.io/maint/set.AGENT &
}

preserve_defaults() {
  echo "Preserving Defaults in $HOME/.defaults.tbz2"
  for l in ${!locations[@]}
  do
  	printf  "${locations[$l]} SAVED STATE >> ~/.defaults.tbz2\n" | tee -a $LOG
  	tar -cjvf - ${locations[$l]} >> ~/.defaults.tbz2 --remove-files -P &>> $LOG
  	printf "$l to ${locations[$l]}\n"|tee -a $LOG

    if [ $l = '.bashrc' ]
    then
  #      printf '\n```  \n' >> $LOG
#        cp -vrT $HOME/.io/config/$l ${locations[$l]} &>> $LOG
        printf "Rethink This\n"
  #      printf '\n```  \n' >> $LOG
    else
  #      printf '\n```  \n' >> $LOG
        cp -v $HOME/.io/config/$l ${locations[$l]} &>> $LOG
  #      printf '\n```  \n' >> $LOG
    fi
  done
}

io_set_scripts
[[ -f $HOME/.defaults.tbz2 ]] || preserve_defaults
[[ -L $HOME/.bashrc ]] || ln -s $HOME/.io/config/bashrc $HOME/.bashrc &>> $LOG
[[ -L $HOME/.profile ]] || ln -s $HOME/.io/config/profile $HOME/.profile &>> $LOG

printf "\`\`\`  \n # End $HOSTNAME :: $(date) \n" >> $LOG

unset LOG # WiON guiON

#####
#   Next generation will have a separate keyfile { rcfile='path', etc. }
# thusly it will batch install rcfiles for expandability
